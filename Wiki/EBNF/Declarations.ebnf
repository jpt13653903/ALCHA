Module = [Statements];

TargetDefinition = "target" AttributeList ";";
Definition       = ["signed"] ["in" | "out"] ["signed"] 
                   ("void" | "pin" | "sig"   | "clk" | 
                    "int"  | "rat" | "float" | "complex") 
                   [FP_Cast] [AttributeList] IdentifierList;

(* The result from "Concatenation" is checked for syntactic validity before
   use as a class name or assignment target *)
Other = Concatenation (
         (";"                              ) | (* Function call  *)
         (".{" [Statements] "}"            )   (* Namespace push *)
         ([AttributeList] IdentifierList   ) | (* Class instance *)
         (AssignmentOperator Expression ";") | (* Assignment     *)
        );
AssignmentOperator = "="  | ":=" | "@=" | "+=" | "-="  | "*="  | "/=" 
                   | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" ; 

IdentifierList = Identifier {ArrayDefinition} (
                  ("(" [DefParameterList] ")" "{" [Statements] "}"   ) |
                  ({"," Identifier {ArrayDefinition}} ";")
                 );
ArrayDefinition  = "[" [Expression] "]";
DefParameterList = Identifier {"," Identifier};

AttributeList       = "<" AttributeAssignment {, AttributeAssignment} ">";
AttributeAssignment = Identifier "=" String;

ClassDefinition = "class" [AttributeList] Identifier ["("[DefParameterList]")"] 
                  [":" Identifier ["(" [ParameterList] ")"]] 
                  "{" [Statements] "}";
(*----------------------------------------------------------------------------*)

