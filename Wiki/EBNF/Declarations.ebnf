Module = [Statements];

TargetDefinition = "set_target" AttributeList ";";
Definition       = ["in" | "out"]
                   (BaseType | "void" | "auto")
                   [CastEpr] [AttributeList] IdentifierList;

BaseType = "pin"  | "sig" | "clk" 
         | "int"  | "rat" | "float" | "complex"
         | "func" ;

IdentifierList = Identifier {ArrayDefinition} (
                  ("(" [DefParameterList] ")" "{" [Statements] "}"   ) |
                  (
                   [Initialiser] 
                   {"," Identifier {ArrayDefinition} [Initialiser]} ";"
                  )
                 );
ArrayDefinition  = "[" [Expression] "]";
Initialiser      = ("=" | ":=") Expression;

DefParameterList = DefParameter {"," DefParameter};
DefParameter     = [BaseType | TypeIdentifier] 
                   Identifier {"[" "]"};

AttributeList       = "<" AttributeAssignment {, AttributeAssignment} ">";
AttributeAssignment = Identifier "=" String;

ClassDefinition = "class" [AttributeList] Identifier
                  ["("[DefParameterList]")"] 
                  [
                    ":" TypeIdentifier ["(" [ParameterList] ")"] 
                   {"," TypeIdentifier ["(" [ParameterList] ")"]}
                  ]
                  "{" [Statements] "}";

EnumDefinition = "enum" Identifier "{" Identifier {"," Identifier} "}";

TypeIdentifier = Identifier {"." Identifier}; (* NameSpace.TypeName *)
(*----------------------------------------------------------------------------*)

