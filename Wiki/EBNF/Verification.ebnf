(* This is a work-in-progress that will be completed when implementation
   gets to the verification features.  The end result will be very
   similar to SystemVerilog. *)

Stimulus = "stimulus" [ ParameterList ] [ AttributeList ] [ Identifier ]
           "{" { Statement } "}";
Emulate  = "emulate"  [ ParameterList ] [ AttributeList ] [ Identifier ]
           "{" { Statement } "}";
ForkJoin = "{" { Statement } "}" { ( "||" | "&&" ) "{" { Statement } "}" }
Wait     = ( "wait" "(" Sequence        ")" )
         | ( "@("       SensitivityList ")" )
         | ( ( "#" | "##" )  Primary ) ;

SensitivityList = [ "posedge" | "negedge" ] Accessor { "," [ "posedge" | "negedge" ] Accessor };

(* The sequence is in a block to allow for future features like local variables *)
SequenceDef = "sequence" Identifier "{" Sequence ";" "}"

(* If a "(" follows the "assert" keyword, it has to be a parameter list *)
Assert = "assert" [ ParameterList ] AssertBlock;

AssertBlock = AssertStatement | ( "{" { AssertStatement } "}" );
AssertStatement = AssertIf | ( Sequence ";" );

AssertIf = "if" "(" Expression ")" AssertBlock [ "else" AssertBlock ];

Sequence   = MatchOr    [ ( "|->" | "|=>" )         Sequence   ];
MatchOr    = MatchAnd   {   "||"                    MatchAnd   };
MatchAnd   = CycleDelay { ( "&&"  | "&&&" )         CycleDelay };
CycleDelay = Repetition { ( "#"   | "##"  ) Primary Repetition };
Repetition = Expression [ ( "[*"  | "[->" | "[=" )  Range "]"  ];

CoverBins  = "coverbins" Identifier "(" ParameterDefList ")"
             "{" { Identifier "=" Sequence ";" } "}";
CoverGroup = "covergroup" [ ParameterList ] Identifier
             "{" { ScopedIdentifier ParameterList ";" } "}";
(*----------------------------------------------------------------------------*)

