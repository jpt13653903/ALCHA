(* This is a work-in-progress that will be completed when implementation
   gets to the verification features.  The end result will be very
   similar to SystemVerilog. *)

Stimulus = "stimulus" [ AttributeList ] [ ParameterList ] [ Identifier ]
           "{" [ Statements ] "}";
Emulate  = "emulate"  [ AttributeList ] [ ParameterList ] [ Identifier ]
           "{" [ Statements ] "}";
ForkJoin = "{" [ Statements ] "}" { ( "||" | "&&" ) "{" [ Statements ] "}" }
Wait     = ( "wait" "(" Sequence        ")" )
         | ( "@("       SensitivityList ")" )
         | ( ( "#" | "##" )  Primary ) ;

SensitivityList = [ "posedge" | "negedge" ] Accessor { "," [ "posedge" | "negedge" ] Accessor };

Assert   = "assert" Expression ";";
Sequence = Expression; (* TODO: Put sequence expressions in here,
                                with "Expression" at the leaves of the tree *)
(*----------------------------------------------------------------------------*)

