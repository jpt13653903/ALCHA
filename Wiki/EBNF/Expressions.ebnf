Expression     = LogicalOR      [ "?" Cast ":" Cast];
LogicalOR      = LogicalAND     { "||"                      LogicalAND    };
LogicalAND     = BitwiseOR      { "&&"                      BitwiseOR     };
BitwiseOR      = BitwiseXOR     {("|"  | "~|")              BitwiseXOR    };
BitwiseXOR     = BitwiseAND     {("#"  | "~#")              BitwiseAND    };
BitwiseAND     = Equality       {("&"  | "~&")              Equality      };
Equality       = Relational     {("==" | "!=")              Relational    };
Relational     = Shift          {("<"  | ">" | "<=" | ">=") Shift         };
Shift          = Additive       {("<<" | ">>")              Additive      };
Additive       = Multiplicative {("+"  | "-" )              Multiplicative};
Multiplicative = Exponential    {("*"  | "/" | "%")         Exponential   };
Exponential    = Array          { "^"                       Array         };
Array          = Replication    { "~"                       Replication   };

Replication   = Concatenation ["\" Primary];
Concatenation = Reduction {":" Reduction};

Reduction  = ["&" | "~&" | "|" | "~|" | "#" | "~#" | "!"] Range;

Range = Unary ["->" Unary ["@" Unary]];

Unary   = {"-" | "~" | ":" | "++" | "--"} Postfix;
Postfix = Cast {
           "[" [Array        ] "]" | (* Slice *)
           "(" [ParameterList] ")" | (* Function call *)
           "."  Identifier         | (* Member reference *)
           "++"                    | (* Increment *)
           "--"                    | (* Decrement *)
           "!"                       (* Factorial *)
          };

Cast    = Primary [CastEpr];
CastEpr = "'" (
           Identifier | Literal |
           ("(" Expression [(",") Expression] ")")
          );

Primary = Identifier | Literal | String | ("(" Expression ")");

ParameterList = [Identifier "="] Expression {"," [Identifier "="] Expression};
(*----------------------------------------------------------------------------*)

