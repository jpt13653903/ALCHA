Expression     = LogicalOR      [ "?" Cast ":" Cast];
LogicalOR      = LogicalAND     { "||"                      LogicalAND    };
LogicalAND     = BitwiseOR      { "&&"                      BitwiseOR     };
BitwiseOR      = BitwiseXOR     {("|"  | "~|")              BitwiseXOR    };
BitwiseXOR     = BitwiseAND     {("^"  | "~^")              BitwiseAND    };
BitwiseAND     = Equality       {("&"  | "~&")              Equality      };
Equality       = Relational     {("==" | "!=")              Relational    };
Relational     = Shift          {("<"  | ">" | "<=" | ">=") Shift         };
Shift          = Additive       {("<<" | ">>")              Additive      };
Additive       = Multiplicative {("+"  | "-" )              Multiplicative};
Multiplicative = Array          {("*"  | "/" | "%")         Array         };
Array          = Replication    { "~"                       Replication   };

Replication   = Concatenation ["\" Primary];
Concatenation = Cast {":" Cast};

Cast       = Reduction [FP_Cast];
FP_Cast    = "'" (Identifier | Literal | ("(" Primary ["," Primary] ")"));
Reduction  = ["&" | "~&" | "|" | "~|" | "^" | "~^" | "!"] Range;

Range = Unary ["->" Unary ["@" Unary]];

Unary   = {"-" | "~"} Postfix;
Postfix = Primary {
           "[" [Array        ] "]" | (* Slice *)
           "(" [ParameterList] ")" | (* Function call *)
           "."  Identifier         | (* Member reference *)
           "++"                    | (* Increment *)
           "--"                      (* Decrement *)
          };

Primary = Identifier | Literal | String | ("(" Expression ")");

ParameterList = Expression {"," Expression};
(*----------------------------------------------------------------------------*)

