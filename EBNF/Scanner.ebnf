(*
 The scanner implements the following phases:
  1) Remove trailing spaces
  2) Escape new-lines
  3) Remove leading spaces that are outside strings and comments
  4) Concatenate spaces that are outside strings and comments
  5) Concatenate new-lines that are outside strings and comments
  6) Convert character streams to preprocessing tokens as per this grammar

  Comments are stored as part of the token that immediately follows the comment.

  The scanner can also ignore the grammar and scan directly to the next
  directive.  This is used to implement #if statements that return "false".
*)
(*----------------------------------------------------------------------------*)

PreprocessingToken = Directive | Newline        | Identifier | 
                     Number    | FixedPointCast | Character  | 
                     String    | Operator       | Other      | EOF;
(*----------------------------------------------------------------------------*)

Directive = "#" Identifier; (* "#" must be the first character on the line *)

Identifier = NonDigit {Digit | NonDigit};

Number = (Digit | ("." Digit)) {
          Digit | NonDigit | 
          "." | "_" | "'" | (* Underscores and quotes are removed *)
          (("e" | "E" | "p" | "P") ["+" | "-"])
         };

FixedPointCast = "`" {Digit | ("." ["-"])};

Character = "'" {("\" Unicode) | (Unicode - "'")} "'";
String    = '"' {("\" Unicode) | (Unicode - '"')} '"';
Comment   = ("//" {Unicode - Newline} NewLine) |
            ("/*" {Unicode - "*/"} "*/");
Unicode   = ? Any Unicode character ?;

Operator = "#"   | "##"  | "{"   | "}"   | "["   | "]"   | "[["  | "]]"  |
           "("   | ")"   | ";"   | ","   | "?"   | ":"   | "::"  | "."   |
           "+"   | "-"   | "*"   | "/"   | "%"   | "^"   | "&"   | "|"   |
           "~"   | "!"   | "="   | ":="  | "<"   | ">"   | "+="  | "-="  |
           "*="  | "/="  | "%="  | "^="  | "&="  | "|="  | "<<"  | ">>"  |
           "<<=" | ">>=" | "=="  | "!="  | "<="  | ">="  | "&&"  | "||"  |
           "++"  | "--"  | "->"  | ".."  | "..." ;
(*----------------------------------------------------------------------------*)

Digit    = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";
HexDigit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" |
           "a" | "b" | "c" | "d" | "e" | "f" |
           "A" | "B" | "C" | "D" | "E" | "F" ;
NonDigit = "_" | "\" | 
           ? "a" to "z" ? | 
           ? "A" to "Z" ? | 
           ? Any Unicode character larger than or equal to U+80 ? ;

NewLine = (? U+0D ? ? U+0A ?) | (? U+0A ? ? U+0D ?) |
           ? U+000A ? | ? U+000B ? | ? U+000C ? | ? U+000D ? | 
           ? U+0085 ? | ? U+2028 ? | ? U+2029 ? ;

Space = ? U+0020 ? | ? U+0009 ? | ? U+00A0 ? | ? U+1680 ? | 
        ? U+180E ? | ? U+2000 ? | ? U+2001 ? | ? U+2002 ? | ? U+2003 ? | 
        ? U+2004 ? | ? U+2005 ? | ? U+2006 ? | ? U+2007 ? | ? U+2008 ? | 
        ? U+2009 ? | ? U+200A ? | ? U+202F ? | ? U+200B ? | ? U+200C ? | 
        ? U+200D ? | ? U+205F ? | ? U+2060 ? | ? U+3000 ? | ? U+FEFF ? ;
(*----------------------------------------------------------------------------*)

