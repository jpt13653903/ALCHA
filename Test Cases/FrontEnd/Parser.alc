// Target definition
target<
 Type = "Simulation",
 Time = "1 ms"
>;

sig x;
pin<location = "AB11"> y, z, w;

pin<Attrib = "xyz"> y[1], z[1][2], w[1][2][3];

in pin<frequency = "50 MHz", location = "C8" > Clk;
   clk<frequency = "10 MHz", type     = "PLL"> CPU_Clk;

out pin'3<location = "A, B, C"> Output;

sig       ' 8    X;
signed sig'(3,9) Y[A][A.B][A.B.C][8];

int         A, B, C;
rat         D[]; // Dynamic array;
float  '80  E;
complex'120 F;

// Class instance
Class Instance;
Class() Instance;
Namespace.Class Instance;
Namespace.Class() Instance;

// Function call
Func();
Class.Func();
Namespace.Class.Func();

// These are illegal
Namespace.Class.Func() = 5;

/*
Class<Attribute = "Value"> Instance;
Class() Instance;
Namespace.Class(A, B, C.B(), 8.2) Instance;
Class(Parameter)<Attribute = "Value"> Instance;
Class(A, B(x, y(), z), C) A, B, C[5], D[6][9];

// Function definition
Class Function(){}
Class Function(A, B){}
sig'8 Func(){}
sig'8 Func(x, y, A, B, C, X){}
sig'8 Func[7](x, y, A, B, C, X){
 x <<= y(B);
}
void Func(x){}

Namespace.Func(Calling, Function);
Namespace.Func(Calling, Function);

// LHS Expression
@{A, B, C} = D;
A:B:C = D;
A.B.C = D;
A.B[5->7].C = D;
*/
// Namespace Push
/*
A.{B.{}}
A.B.C.{
}
*/

// Target query
/*
if(target.Type == "Simulation"){
 x = 3;
}else{
 x = 5;
}
*/

